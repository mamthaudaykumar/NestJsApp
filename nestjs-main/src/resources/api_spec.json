openapi: 3.0.3
info:
  title: Product & User API
  version: 1.0.0
  description: API for managing products and users

tags:
  - name: Product
    description: Endpoints related to products
  - name: Users
    description: Endpoints related to users

paths:
  /product:
    get:
      tags:
        - Product
      summary: List products
      parameters:
        - in: query
          name: search
          schema:
            type: string
          description: Search term for product title
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Paginated list of products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageDtoProduct'

    post:
      tags:
        - Product
      summary: Create a product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
      responses:
        '200':
          description: Created product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDto'

  /product/{id}:
    get:
      tags:
        - Product
      summary: Get a single product
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDto'
        '404':
          description: Product not found

    put:
      tags:
        - Product
      summary: Update a product
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
      responses:
        '200':
          description: Updated product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDto'
        '403':
          description: Forbidden
        '404':
          description: Product not found

    delete:
      tags:
        - Product
      summary: Delete a product
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Product deleted
        '404':
          description: Product not found

  /public-product:
    get:
      tags:
        - Product
      summary: Public product search
      parameters:
        - in: query
          name: search
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Paginated list of products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageDtoProduct'

  /public-product/{id}:
    get:
      tags:
        - Product
      summary: Get a public product by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDto'
        '404':
          description: Product not found

  /user:
    get:
      tags:
        - Users
      summary: List users
      parameters:
        - in: query
          name: search
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Paginated list of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageDtoUser'

    post:
      tags:
        - Users
      summary: Create a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: Created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'

  /user/{id}:
    get:
      tags:
        - Users
      summary: Get user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        '404':
          description: User not found

    put:
      tags:
        - Users
      summary: Update user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: Updated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        '404':
          description: User not found

    delete:
      tags:
        - Users
      summary: Delete user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User deleted
        '404':
          description: User not found

components:
  schemas:
    ProductDto:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        number:
          type: string
        title:
          type: string
        description:
          type: string

    ProductRequest:
      type: object
      required:
        - userId
        - number
        - title
        - description
      properties:
        userId:
          type: string
        number:
          type: string
        title:
          type: string
        description:
          type: string

    UserDto:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        role:
          type: string

    UserRequest:
      type: object
      required:
        - firstName
        - lastName
        - role
      properties:
        firstName:
          type: string
        lastName:
          type: string
        role:
          type: string

    PageDtoProduct:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ProductDto'
        total:
          type: integer
        limit:
          type: integer
        offset:
          type: integer

    PageDtoUser:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/UserDto'
        total:
          type: integer
        limit:
          type: integer
        offset:
          type: integer
